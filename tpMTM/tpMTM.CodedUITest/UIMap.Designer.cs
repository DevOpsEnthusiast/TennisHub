// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace tpMTM.CodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddNewPlayer - Use 'AddNewPlayerParams' to pass parameters into this method.
        /// </summary>
        public void AddNewPlayer()
        {
            #region Variable Declarations
            HtmlHyperlink uIPlayerHyperlink = this.UIBlankPageInternetExpWindow.UIHomePageMyASPNETApplDocument.UICtl01Custom.UIPlayerHyperlink;
            HtmlInputButton uIAddPlayerButton = this.UIBlankPageInternetExpWindow.UIMyASPNETApplicationDocument.UIAddPlayerButton;
            HtmlEdit uITxtNameEdit = this.UIBlankPageInternetExpWindow.UIMyASPNETApplicationDocument.UITxtNameEdit;
            HtmlEdit uITxtAddressEdit = this.UIBlankPageInternetExpWindow.UIMyASPNETApplicationDocument.UITxtAddressEdit;
            HtmlInputButton uIAddButton = this.UIBlankPageInternetExpWindow.UIMyASPNETApplicationDocument.UIAddButton;
            HtmlEdit uITxtNameEdit1 = this.UIBlankPageInternetExpWindow.UIMyASPNETApplicationDocument2.UITxtNameEdit;
            HtmlEdit uITxtAddressEdit1 = this.UIBlankPageInternetExpWindow.UIMyASPNETApplicationDocument2.UITxtAddressEdit;
            HtmlInputButton uIAddButton1 = this.UIBlankPageInternetExpWindow.UIMyASPNETApplicationDocument2.UIAddButton;
            #endregion
            Playback.PlaybackSettings.WaitForReadyLevel = WaitForReadyLevel.Disabled;
            // Go to web page 'http://localhost:40386/' using new browser instance
            this.UIBlankPageInternetExpWindow.LaunchUrl(new System.Uri(this.AddNewPlayerParams.UIBlankPageInternetExpWindowUrl));

            // Click 'Player' link
            Mouse.Click(uIPlayerHyperlink, new Point(38, 24));

            // Click 'Add Player' button
            Mouse.Click(uIAddPlayerButton, new Point(46, 11));

            // Type 'Kei Nishikori' in 'txtName' text box
            uITxtNameEdit.Text = this.AddNewPlayerParams.UITxtNameEditText;

            // Type 'Japan' in 'txtAddress' text box
            uITxtAddressEdit.Text = this.AddNewPlayerParams.UITxtAddressEditText;

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(14, 22));

            // Type 'Kei Nishikori' in 'txtName' text box
            uITxtNameEdit1.Text = this.AddNewPlayerParams.UITxtNameEditText1;

            // Type 'Japan' in 'txtAddress' text box
            uITxtAddressEdit1.Text = this.AddNewPlayerParams.UITxtAddressEditText1;

            // Click 'Add' button
            Mouse.Click(uIAddButton1, new Point(22, 16));
        }
        
        /// <summary>
        /// AssertAddNewPlayer - Use 'AssertAddNewPlayerExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAddNewPlayer()
        {
            #region Variable Declarations
            HtmlCell uIKeiNishikoriCell = this.UIBlankPageInternetExpWindow.UIMyASPNETApplicationDocument2.UIMainContent_gvPlayerTable.UIKeiNishikoriCell;
            HtmlCheckBox uICtl00MainContentgvPlCheckBox = this.UIBlankPageInternetExpWindow.UIMyASPNETApplicationDocument2.UICtl00MainContentgvPlCheckBox;
            #endregion

            // Verify that the 'InnerText' property of 'Kei Nishikori' cell equals 'Kei Nishikori'
            Assert.AreEqual(this.AssertAddNewPlayerExpectedValues.UIKeiNishikoriCellInnerText, uIKeiNishikoriCell.InnerText);

            // Verify that the 'Value' property of 'ctl00$MainContent$gvPlayers$ctl07$ctl00' check box equals 'on'
            Assert.AreEqual(this.AssertAddNewPlayerExpectedValues.UICtl00MainContentgvPlCheckBoxValue, uICtl00MainContentgvPlCheckBox.Value);
        }
        
        #region Properties
        public virtual AddNewPlayerParams AddNewPlayerParams
        {
            get
            {
                if ((this.mAddNewPlayerParams == null))
                {
                    this.mAddNewPlayerParams = new AddNewPlayerParams();
                }
                return this.mAddNewPlayerParams;
            }
        }
        
        public virtual AssertAddNewPlayerExpectedValues AssertAddNewPlayerExpectedValues
        {
            get
            {
                if ((this.mAssertAddNewPlayerExpectedValues == null))
                {
                    this.mAssertAddNewPlayerExpectedValues = new AssertAddNewPlayerExpectedValues();
                }
                return this.mAssertAddNewPlayerExpectedValues;
            }
        }
        
        public UIBlankPageInternetExpWindow UIBlankPageInternetExpWindow
        {
            get
            {
                if ((this.mUIBlankPageInternetExpWindow == null))
                {
                    this.mUIBlankPageInternetExpWindow = new UIBlankPageInternetExpWindow();
                }
                return this.mUIBlankPageInternetExpWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddNewPlayerParams mAddNewPlayerParams;
        
        private AssertAddNewPlayerExpectedValues mAssertAddNewPlayerExpectedValues;
        
        private UIBlankPageInternetExpWindow mUIBlankPageInternetExpWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddNewPlayer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AddNewPlayerParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:40386/' using new browser instance
        /// </summary>
        public string UIBlankPageInternetExpWindowUrl = "http://localhost:40386/";
        
        /// <summary>
        /// Type 'Kei Nishikori' in 'txtName' text box
        /// </summary>
        public string UITxtNameEditText = "Kei Nishikori";
        
        /// <summary>
        /// Type 'Japan' in 'txtAddress' text box
        /// </summary>
        public string UITxtAddressEditText = "Japan";
        
        /// <summary>
        /// Type 'Kei Nishikori' in 'txtName' text box
        /// </summary>
        public string UITxtNameEditText1 = "Kei Nishikori";
        
        /// <summary>
        /// Type 'Japan' in 'txtAddress' text box
        /// </summary>
        public string UITxtAddressEditText1 = "Japan";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAddNewPlayer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertAddNewPlayerExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Kei Nishikori' cell equals 'Kei Nishikori'
        /// </summary>
        public string UIKeiNishikoriCellInnerText = "Kei Nishikori";
        
        /// <summary>
        /// Verify that the 'Value' property of 'ctl00$MainContent$gvPlayers$ctl07$ctl00' check box equals 'on'
        /// </summary>
        public string UICtl00MainContentgvPlCheckBoxValue = "on";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBlankPageInternetExpWindow : BrowserWindow
    {
        
        public UIBlankPageInternetExpWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Blank Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Blank Page");
            this.WindowTitles.Add("Home Page - My ASP.NET Application");
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageMyASPNETApplDocument UIHomePageMyASPNETApplDocument
        {
            get
            {
                if ((this.mUIHomePageMyASPNETApplDocument == null))
                {
                    this.mUIHomePageMyASPNETApplDocument = new UIHomePageMyASPNETApplDocument(this);
                }
                return this.mUIHomePageMyASPNETApplDocument;
            }
        }
        
        public UIMyASPNETApplicationDocument UIMyASPNETApplicationDocument
        {
            get
            {
                if ((this.mUIMyASPNETApplicationDocument == null))
                {
                    this.mUIMyASPNETApplicationDocument = new UIMyASPNETApplicationDocument(this);
                }
                return this.mUIMyASPNETApplicationDocument;
            }
        }
        
        public UIMyASPNETApplicationDocument2 UIMyASPNETApplicationDocument2
        {
            get
            {
                if ((this.mUIMyASPNETApplicationDocument2 == null))
                {
                    this.mUIMyASPNETApplicationDocument2 = new UIMyASPNETApplicationDocument2(this);
                }
                return this.mUIMyASPNETApplicationDocument2;
            }
        }
        
        public UIAddressBarWindow UIAddressBarWindow
        {
            get
            {
                if ((this.mUIAddressBarWindow == null))
                {
                    this.mUIAddressBarWindow = new UIAddressBarWindow(this);
                }
                return this.mUIAddressBarWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageMyASPNETApplDocument mUIHomePageMyASPNETApplDocument;
        
        private UIMyASPNETApplicationDocument mUIMyASPNETApplicationDocument;
        
        private UIMyASPNETApplicationDocument2 mUIMyASPNETApplicationDocument2;
        
        private UIAddressBarWindow mUIAddressBarWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHomePageMyASPNETApplDocument : HtmlDocument
    {
        
        public UIHomePageMyASPNETApplDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page - My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:40386/";
            this.WindowTitles.Add("Home Page - My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public UICtl01Custom UICtl01Custom
        {
            get
            {
                if ((this.mUICtl01Custom == null))
                {
                    this.mUICtl01Custom = new UICtl01Custom(this);
                }
                return this.mUICtl01Custom;
            }
        }
        #endregion
        
        #region Fields
        private UICtl01Custom mUICtl01Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICtl01Custom : HtmlCustom
    {
        
        public UICtl01Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "ctl01";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"ctl01\" action=\"./\" method=\"post\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Home Page - My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIPlayerHyperlink
        {
            get
            {
                if ((this.mUIPlayerHyperlink == null))
                {
                    this.mUIPlayerHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIPlayerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIPlayerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPlayerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPlayerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Player";
                    this.mUIPlayerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Player";
                    this.mUIPlayerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPlayerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:40386/Player";
                    this.mUIPlayerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPlayerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"Player\"";
                    this.mUIPlayerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIPlayerHyperlink.WindowTitles.Add("Home Page - My ASP.NET Application");
                    #endregion
                }
                return this.mUIPlayerHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIPlayerHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMyASPNETApplicationDocument : HtmlDocument
    {
        
        public UIMyASPNETApplicationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "- My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Player";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:40386/Player";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIAddPlayerButton
        {
            get
            {
                if ((this.mUIAddPlayerButton == null))
                {
                    this.mUIAddPlayerButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIAddPlayerButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIAddPlayerButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$MainContent$ctl01";
                    this.mUIAddPlayerButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Add Player";
                    this.mUIAddPlayerButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIAddPlayerButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIAddPlayerButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIAddPlayerButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"ctl00$MainContent$ctl01\" type=\"sub";
                    this.mUIAddPlayerButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "11";
                    this.mUIAddPlayerButton.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIAddPlayerButton;
            }
        }
        
        public HtmlEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "MainContent_txtName";
                    this.mUITxtNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$MainContent$txtName";
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ctl00$MainContent$txtName\" id=\"Mai";
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUITxtNameEdit.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        
        public HtmlEdit UITxtAddressEdit
        {
            get
            {
                if ((this.mUITxtAddressEdit == null))
                {
                    this.mUITxtAddressEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "MainContent_txtAddress";
                    this.mUITxtAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$MainContent$txtAddress";
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ctl00$MainContent$txtAddress\" id=\"";
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUITxtAddressEdit.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUITxtAddressEdit;
            }
        }
        
        public HtmlInputButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[HtmlButton.PropertyNames.Id] = "MainContent_btnAdd";
                    this.mUIAddButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$MainContent$btnAdd";
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Add";
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"ctl00$MainContent$btnAdd\" id=\"Main";
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
                    this.mUIAddButton.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIAddPlayerButton;
        
        private HtmlEdit mUITxtNameEdit;
        
        private HtmlEdit mUITxtAddressEdit;
        
        private HtmlInputButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMyASPNETApplicationDocument2 : HtmlDocument
    {
        
        public UIMyASPNETApplicationDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "- My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/AddPlayer";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:40386/AddPlayer";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "MainContent_txtName";
                    this.mUITxtNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$MainContent$txtName";
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ctl00$MainContent$txtName\" id=\"Mai";
                    this.mUITxtNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUITxtNameEdit.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        
        public HtmlEdit UITxtAddressEdit
        {
            get
            {
                if ((this.mUITxtAddressEdit == null))
                {
                    this.mUITxtAddressEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "MainContent_txtAddress";
                    this.mUITxtAddressEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$MainContent$txtAddress";
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ctl00$MainContent$txtAddress\" id=\"";
                    this.mUITxtAddressEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUITxtAddressEdit.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUITxtAddressEdit;
            }
        }
        
        public HtmlInputButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[HtmlButton.PropertyNames.Id] = "MainContent_btnAdd";
                    this.mUIAddButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$MainContent$btnAdd";
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Add";
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"ctl00$MainContent$btnAdd\" id=\"Main";
                    this.mUIAddButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
                    this.mUIAddButton.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        
        public UIMainContent_gvPlayerTable UIMainContent_gvPlayerTable
        {
            get
            {
                if ((this.mUIMainContent_gvPlayerTable == null))
                {
                    this.mUIMainContent_gvPlayerTable = new UIMainContent_gvPlayerTable(this);
                }
                return this.mUIMainContent_gvPlayerTable;
            }
        }
        
        public HtmlCheckBox UICtl00MainContentgvPlCheckBox
        {
            get
            {
                if ((this.mUICtl00MainContentgvPlCheckBox == null))
                {
                    this.mUICtl00MainContentgvPlCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUICtl00MainContentgvPlCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "MainContent_gvPlayers_ctl00_5";
                    this.mUICtl00MainContentgvPlCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ctl00$MainContent$gvPlayers$ctl07$ctl00";
                    this.mUICtl00MainContentgvPlCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUICtl00MainContentgvPlCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUICtl00MainContentgvPlCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUICtl00MainContentgvPlCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUICtl00MainContentgvPlCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ctl00$MainContent$gvPlayers$ctl07$";
                    this.mUICtl00MainContentgvPlCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "9";
                    this.mUICtl00MainContentgvPlCheckBox.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUICtl00MainContentgvPlCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITxtNameEdit;
        
        private HtmlEdit mUITxtAddressEdit;
        
        private HtmlInputButton mUIAddButton;
        
        private UIMainContent_gvPlayerTable mUIMainContent_gvPlayerTable;
        
        private HtmlCheckBox mUICtl00MainContentgvPlCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainContent_gvPlayerTable : HtmlTable
    {
        
        public UIMainContent_gvPlayerTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "MainContent_gvPlayers";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "id\r\n\r\nName\r\n\r\nAddress\r\n\r\nPhone\r\n\r\nEmail\r";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=\"MainContent_gvPlayers\" style=\"border-collapse: collapse;\" border=\"1\" rules=\"a" +
                "ll\" cellspacing=\"0\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "7";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = null;
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIKeiNishikoriCell
        {
            get
            {
                if ((this.mUIKeiNishikoriCell == null))
                {
                    this.mUIKeiNishikoriCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIKeiNishikoriCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIKeiNishikoriCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIKeiNishikoriCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIKeiNishikoriCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Kei Nishikori";
                    this.mUIKeiNishikoriCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIKeiNishikoriCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "6";
                    this.mUIKeiNishikoriCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIKeiNishikoriCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIKeiNishikoriCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "32";
                    this.mUIKeiNishikoriCell.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIKeiNishikoriCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIKeiNishikoriCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressBarWindow : WinWindow
    {
        
        public UIAddressBarWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "41477";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public WinClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAddressBarClient.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
                    this.mUIAddressBarClient.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIAddressBarClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAddressBarClient;
        #endregion
    }
}
